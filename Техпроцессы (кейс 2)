# Git политика для e-commerce платформы

## Команда и контекст
Команда: 12 разработчиков
Срок проекта: 1.5 года
Требования: стабильность, безопасность, предсказуемые релизы

## Структура веток
- `main` - продакшн код, стабильная версия
- `develop` - основная ветка разработки
- `release/v1.2.0` - подготовка релизов
- `staging` - финальное тестирование
- `feature/TASK-123-[описание]` - разработка новых функций
- `hotfix/TASK-456-[описание]` - критические исправления

## Рабочий процесс
1. Создание ветки от `develop` для новой задачи
2. Разработка с регулярным обновлением от develop
3. Push и создание Pull Request
4. Code review (минимум 2 одобрения) и merge в develop
5. Создание release ветки каждые 2 недели от develop
6. Тестирование релиза → staging → main с созданием тега
7. Hotfix процесс: ветка от main → исправление → merge в main и develop

## Правила защиты веток
**main**: 
- Запрет прямых push и удаления
- Обязательный PR с 2 одобрениями
- Все автоматические тесты должны пройти
- Обязательный review от code owner

**develop**:
- Обязательный PR с 2 одобрениями
- Все автоматические тесты должны пройти

**release/***:
- Обязательный PR с одобрением team lead

## Соглашения по коммитам
Формат Conventional Commits:
```
feat(payment): добавлена интеграция с Stripe
fix(auth): исправлена ошибка валидации логина
docs: обновлена документация API
```

## Управление релизами
- Плановые релизы каждые 4 недели
- Hotfix релизы в течение 24 часов для критических проблем
- Все изменения связаны с JIRA задачами
- Обязательное создание release notes

## Требования к Code Review
- Минимум 2 одобрения от разработчиков
- Обязательное участие team lead для критических изменений
- Автоматические проверки: тесты, линтеры, сканирование безопасности
- Проверка соответствия архитектурным требованиям

## Ключевые принципы
- Приоритет стабильности над скоростью разработки
- Полная трассируемость всех изменений
- Недопустимость нарушения работы продакшн среды
- Обязательное документирование изменений и решений
